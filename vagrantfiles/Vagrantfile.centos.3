Vagrant.configure("2") do |config|
   common = <<-SCRIPT
          sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sudo sed -i 's|#baseurl=http://mirror.centos.org/$contentdir/$stream|baseurl=http://mirror.centos.org/centos/8-stream|g' /etc/yum.repos.d/CentOS-*
          sudo dnf clean all
          sudo dnf install epel-release epel-next-release -y
          sudo yum -y update ca-certificates
          sudo dnf install lvm2 -y
          echo -e "resizepart\n2\nYes\n100%\nprint\nquit" | sudo parted /dev/sda ---pretend-input-tty
          sudo xfs_growfs /
   SCRIPT

  config.disksize.size = "100GB"
  config.ssh.insert_key = false
  config.vm.provision "shell", inline: "sudo yum -y update ca-certificates"

  config.vm.define "hopsworks2" do |hopsworks2|
    hopsworks2.vm.box = "bento/centos-stream-8"
    hopsworks2.vm.hostname = 'hopsworks2.logicalclocks.com'

    hopsworks2.vm.network :private_network, ip: "192.168.56.103"
    hopsworks2.vm.network :forwarded_port, guest: 22, host: 10022, id: "ssh"


    hopsworks2.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 14144]
      v.customize ["modifyvm", :id, "--name", "hopsworks2"]
      v.customize ["modifyvm", :id, "--nictype1", "virtio"]
      v.customize ["modifyvm", :id, "--nictype2", "virtio"]
      v.customize ["modifyvm", :id, "--cableconnected1", "on"]
      v.customize ["modifyvm", :id, "--cableconnected2", "on"]
      v.customize ["modifyvm", :id, "--cpus", "5"]      
    end

    config.vm.provision :shell, :inline => common
    hopsworks2.vm.provision :chef_solo do |chef|
      chef.version = "14.10.9"
      chef.cookbooks_path = "cookbooks"
      chef.json = {
          "karamel" => {
	          "default" =>      {
                    "private_ips" => ["192.168.56.101","192.168.56.102","192.168.56.103"]
	          },
            "hostname" => "hopsworks2.logicalclocks.com",
          },
        }
      chef.add_recipe "karamel::install"
    end
  end

  config.vm.define "hopsworks1" do |hopsworks1|
    hopsworks1.vm.box = "bento/centos-stream-8"
    hopsworks1.vm.hostname = 'hopsworks1.logicalclocks.com'
    hopsworks1.vm.network :private_network, ip: "192.168.56.102"
    hopsworks1.vm.network :forwarded_port, guest: 22, host: 10023, id: "ssh"

    hopsworks1.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 14144]
      v.customize ["modifyvm", :id, "--name", "hopsworks1"]
      v.customize ["modifyvm", :id, "--nictype1", "virtio"]
      v.customize ["modifyvm", :id, "--nictype2", "virtio"]
      v.customize ["modifyvm", :id, "--cableconnected1", "on"]
      v.customize ["modifyvm", :id, "--cableconnected2", "on"]
      v.customize ["modifyvm", :id, "--cpus", "5"]      
    end

    config.vm.provision :shell, :inline => common
    hopsworks1.vm.provision :chef_solo do |chef|
      chef.version = "14.10.9"
      chef.cookbooks_path = "cookbooks"
      chef.json = {
          "karamel" => {
	        "default" =>      {
                  "private_ips" => ["192.168.56.101","192.168.56.102","192.168.56.103"]
	        },
          "hostname" => "hopsworks1.logicalclocks.com",
          },
        }
      chef.add_recipe "karamel::install"
    end
  end


  config.vm.define "hopsworks0", primary: true do |hopsworks0|
    hopsworks0.vm.box = "bento/centos-stream-8"
    hopsworks0.vm.hostname = 'hopsworks0.logicalclocks.com'

    hopsworks0.vm.network :private_network, ip: "192.168.56.101"
    hopsworks0.vm.network :forwarded_port, guest: 22, host: 10024, id: "ssh"
    # MySQL
    hopsworks0.vm.network(:forwarded_port, {:guest=>3306, :host=>3306})
    # karamel http
    hopsworks0.vm.network(:forwarded_port, {:guest=>9090, :host=>9090})
    # Hopsworks http
    hopsworks0.vm.network(:forwarded_port, {:guest=>8080, :host=>8080})
    # Hopsworks https
    hopsworks0.vm.network(:forwarded_port, {:guest=>8181, :host=>8181})
    # Glassfish debug port
    hopsworks0.vm.network(:forwarded_port, {:guest=>9009, :host=>9009})
    # Glassfish admin UI
    hopsworks0.vm.network(:forwarded_port, {:guest=>4848, :host=>4848})
    # Yarn RM
    hopsworks0.vm.network(:forwarded_port, {:guest=>8088, :host=>8088})
    # Kibana
    hopsworks0.vm.network(:forwarded_port, {:guest=>5601, :host=>5601})
    # Grafana Webserver
    hopsworks0.vm.network(:forwarded_port, {:guest=>3000, :host=>3000})
    # Nodemanager
    hopsworks0.vm.network(:forwarded_port, {:guest=>8083, :host=>8083})
    # Influx DB admin (because of clash with nodemanager)
    hopsworks0.vm.network(:forwarded_port, {:guest=>8084, :host=>8084})
    # Influx DB REST API
    hopsworks0.vm.network(:forwarded_port, {:guest=>8086, :host=>8086})
    # Graphite Endpoint
    hopsworks0.vm.network(:forwarded_port, {:guest=>2003, :host=>2003})
    # Jupyter
    hopsworks0.vm.network(:forwarded_port, {:guest=>8888, :host=>8888})


    hopsworks0.vm.provision "file", source: "cluster.yml", destination: "cluster.yml"
    hopsworks0.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "~/.ssh/id_rsa"
    hopsworks0.vm.provision "shell", inline: "cp /home/vagrant/.ssh/authorized_keys /home/vagrant/.ssh/id_rsa.pub && sudo chown vagrant:vagrant /home/vagrant/.ssh/id_rsa.pub"


    hopsworks0.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 18768]
      v.customize ["modifyvm", :id, "--name", "hopsworks0"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--cpus", "6"]
      v.customize ["modifyvm", :id, "--nictype1", "virtio"]
      v.customize ["modifyvm", :id, "--nictype2", "virtio"]
      v.customize ["modifyvm", :id, "--cableconnected1", "on"]
      v.customize ["modifyvm", :id, "--cableconnected2", "on"]
    end

    config.vm.provision :shell, :inline => common
    hopsworks0.vm.provision :chef_solo do |chef|
        chef.version = "14.10.9"
        chef.cookbooks_path = "cookbooks"
        chef.json = {
          "karamel" => {
	           "default" =>      {
                     "private_ips" => ["192.168.56.101","192.168.56.102","192.168.56.103"]
	           },
             "hostname" => "hopsworks0.logicalclocks.com",
          },
        }
        chef.add_recipe "karamel::install"
        chef.add_recipe "karamel::default"
        chef.add_recipe "karamel::run"
      end

  end

end

